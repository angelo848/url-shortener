plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.asalles'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    springCloudFunctionVersion = '4.2.2'
}

import com.github.jengelman.gradle.plugins.shadow.transformers.*

shadowJar {
    archiveClassifier = 'aws'
    dependencies {
        exclude(
                dependency("org.springframework.cloud:spring-cloud-function-web:${springCloudFunctionVersion}"))
    }
    // Required for Spring
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    append 'META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports'
    append 'META-INF/spring/org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration.imports'
    transform(PropertiesFileTransformer) {
        paths = ['META-INF/spring.factories']
        mergeStrategy = "append"
    }
}

dependencies {
    // Spring Boot Core
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Spring Data Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'

    // AWS DynamoDB
    implementation 'software.amazon.awssdk:bom:2.31.8'
    implementation 'software.amazon.awssdk:dynamodb:2.31.8'
    implementation 'software.amazon.awssdk:dynamodb-enhanced:2.31.8'

    // Spring Cloud Function
    implementation "org.springframework.cloud:spring-cloud-function-adapter-aws:${springCloudFunctionVersion}"
    implementation "org.springframework.cloud:spring-cloud-starter-function-webflux:${springCloudFunctionVersion}"

    // AWS Lambda
    implementation 'com.amazonaws:aws-lambda-java-events:3.15.0'
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.3'


    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Reactive
    implementation 'io.projectreactor:reactor-core'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Others
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
    // useJUnitPlatform()
}
